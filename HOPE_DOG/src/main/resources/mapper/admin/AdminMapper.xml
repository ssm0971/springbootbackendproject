<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hope_dog.mapper.admin.AdminMapper">
    <select id="selectId" resultType="Long">
        select ADMIN_NO
        from TBL_ADMIN
        where ADMIN_ID=#{adminId} and ADMIN_PW=#{adminPw}
    </select>

    <select id="selectLoginInfo" resultType="AdminSessionDTO">
        select ADMIN_NO, ADMIN_ID
        from TBL_ADMIN
        where ADMIN_ID=#{adminId} and ADMIN_PW=#{adminPw}
    </select>
<!--회원 목록 조회-->
    <select id="selectMemberList" resultType="AdminMemberDTO">
        SELECT
            MEMBER_NO,
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            MEMBER_GENDER,
            MEMBER_ZIPCODE,
            MEMBER_ADDRESS,
            MEMBER_DETAIL_ADDRESS,
            MEMBER_TWO_FACTOR_ENABLED
        FROM
            TBL_MEMBER
        ORDER BY
            MEMBER_NO DESC
    </select>
<!--memberNo로 회원 정보 검색-->
    <select id="selectMemberByNo" resultType="AdminMemberDTO">
        SELECT
            MEMBER_NO,
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            MEMBER_GENDER,
            MEMBER_ZIPCODE,
            MEMBER_ADDRESS,
            MEMBER_DETAIL_ADDRESS,
            MEMBER_TWO_FACTOR_ENABLED
        FROM
            TBL_MEMBER
        WHERE TBL_MEMBER.MEMBER_NO = #{memberNo}
        ORDER BY
            MEMBER_NO DESC
    </select>
<!--검색어로 회원 검색-->
    <select id="searchMemberByKeyword" parameterType="String" resultType="AdminMemberDTO">
        SELECT
            MEMBER_NO,
            MEMBER_ID,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            MEMBER_GENDER,
            MEMBER_ZIPCODE,
            MEMBER_ADDRESS,
            MEMBER_DETAIL_ADDRESS,
            MEMBER_TWO_FACTOR_ENABLED
        FROM
            TBL_MEMBER
        WHERE
            MEMBER_ID LIKE '%' || #{keyword} || '%' OR MEMBER_NAME LIKE '%' || #{keyword} || '%'
            OR MEMBER_NICKNAME LIKE '%' || #{keyword} || '%' OR MEMBER_EMAIL LIKE '%' || #{keyword} || '%'
        ORDER BY
            MEMBER_NO DESC
    </select>
<!--회원 강제 탈퇴-->
    <delete id="deleteMembers" parameterType="list">
        DELETE FROM TBL_MEMBER
        WHERE MEMBER_NO IN
        <foreach collection="memberNoList" item="memberNo" open="(" separator="," close=")">
            #{memberNo}
        </foreach>
    </delete>
<!--센터 회원 목록 조회-->
    <select id="selectCenterMemberList" resultType="AdminCenterMemberDTO">
        SELECT
            TBL_CENTER_MEMBER.CENTER_MEMBER_NO,
            CENTER_MEMBER_ID,
            CENTER_MEMBER_NAME,
            CENTER_MEMBER_ZIPCODE,
            CENTER_MEMBER_EMAIL,
            CENTER_MEMBER_ADDRESS,
            CENTER_MEMBER_DETAIL_ADDRESS,
            CENTER_MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_STATUS,
            CENTER_FILE_NO,
            CENTER_FILE_NAME,
            CENTER_FILE_UUID,
            CENTER_FILE_PATH
        FROM
            TBL_CENTER_MEMBER LEFT JOIN TBL_CENTER_FILE
        ON TBL_CENTER_MEMBER.CENTER_MEMBER_NO = TBL_CENTER_FILE.CENTER_MEMBER_NO
        WHERE CENTER_MEMBER_STATUS = 'N'
        ORDER BY TBL_CENTER_MEMBER.CENTER_MEMBER_NO DESC
    </select>
    <!--센터 회원 강제 탈퇴-->
    <delete id="deleteCenterMembers" parameterType="list">
        DELETE FROM TBL_CENTER_MEMBER
        WHERE CENTER_MEMBER_NO IN
        <foreach collection="centerMemberNoList" item="centerMemberNo" open="(" separator="," close=")">
            #{centerMemberNo}
        </foreach>
    </delete>
    <select id="selectNotPassedCenterMemberByNo" resultType="AdminCenterMemberDTO">
        SELECT
            TBL_CENTER_MEMBER.CENTER_MEMBER_NO,
            CENTER_MEMBER_ID,
            CENTER_MEMBER_NAME,
            CENTER_MEMBER_ZIPCODE,
            CENTER_MEMBER_EMAIL,
            CENTER_MEMBER_ADDRESS,
            CENTER_MEMBER_DETAIL_ADDRESS,
            CENTER_MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_STATUS,
            CENTER_FILE_NO,
            CENTER_FILE_NAME,
            CENTER_FILE_UUID,
            CENTER_FILE_PATH
        FROM
            TBL_CENTER_MEMBER LEFT JOIN TBL_CENTER_FILE
                                        ON TBL_CENTER_MEMBER.CENTER_MEMBER_NO = TBL_CENTER_FILE.CENTER_MEMBER_NO
        WHERE CENTER_MEMBER_STATUS = 'N' AND
            TBL_CENTER_MEMBER.CENTER_MEMBER_NO = #{centerMemberNo}
    </select>

    <select id="selectPassedCenterMemberList" resultType="AdminCenterMemberDTO">
        SELECT
            TBL_CENTER_MEMBER.CENTER_MEMBER_NO,
            CENTER_MEMBER_ID,
            CENTER_MEMBER_NAME,
            CENTER_MEMBER_ZIPCODE,
            CENTER_MEMBER_EMAIL,
            CENTER_MEMBER_ADDRESS,
            CENTER_MEMBER_DETAIL_ADDRESS,
            CENTER_MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_STATUS,
            CENTER_FILE_NO,
            CENTER_FILE_NAME,
            CENTER_FILE_UUID,
            CENTER_FILE_PATH
        FROM
            TBL_CENTER_MEMBER LEFT JOIN TBL_CENTER_FILE
                                   ON TBL_CENTER_MEMBER.CENTER_MEMBER_NO = TBL_CENTER_FILE.CENTER_MEMBER_NO
        WHERE CENTER_MEMBER_STATUS = 'Y'
        ORDER BY TBL_CENTER_MEMBER.CENTER_MEMBER_NO DESC
    </select>
<!--센터 멤버 검색 목록 조회-->
    <select id="searchPassedCenterMemberByKeyword" parameterType="String" resultType="AdminCenterMemberDTO">
        SELECT
            TBL_CENTER_MEMBER.CENTER_MEMBER_NO,
            CENTER_MEMBER_ID,
            CENTER_MEMBER_NAME,
            CENTER_MEMBER_ZIPCODE,
            CENTER_MEMBER_EMAIL,
            CENTER_MEMBER_ADDRESS,
            CENTER_MEMBER_DETAIL_ADDRESS,
            CENTER_MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_STATUS,
            CENTER_FILE_NO,
            CENTER_FILE_NAME,
            CENTER_FILE_UUID,
            CENTER_FILE_PATH
        FROM
            TBL_CENTER_MEMBER LEFT JOIN TBL_CENTER_FILE
                                        ON TBL_CENTER_MEMBER.CENTER_MEMBER_NO = TBL_CENTER_FILE.CENTER_MEMBER_NO
        WHERE CENTER_MEMBER_STATUS = 'Y' AND
            (CENTER_MEMBER_ID LIKE '%' || #{keyword} || '%' OR CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%'
           OR CENTER_MEMBER_EMAIL LIKE '%' || #{keyword} || '%')
        ORDER BY
            TBL_CENTER_MEMBER.CENTER_MEMBER_NO DESC
    </select>

    <!--centerMemberNo로 회원 정보 검색-->
    <select id="selectPassedCenterMemberByNo" resultType="AdminCenterMemberDTO">
        SELECT
            TBL_CENTER_MEMBER.CENTER_MEMBER_NO,
            CENTER_MEMBER_ID,
            CENTER_MEMBER_NAME,
            CENTER_MEMBER_ZIPCODE,
            CENTER_MEMBER_EMAIL,
            CENTER_MEMBER_ADDRESS,
            CENTER_MEMBER_DETAIL_ADDRESS,
            CENTER_MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_STATUS,
            CENTER_FILE_NO,
            CENTER_FILE_NAME,
            CENTER_FILE_UUID,
            CENTER_FILE_PATH
        FROM
            TBL_CENTER_MEMBER LEFT JOIN TBL_CENTER_FILE
                                        ON TBL_CENTER_MEMBER.CENTER_MEMBER_NO = TBL_CENTER_FILE.CENTER_MEMBER_NO
        WHERE CENTER_MEMBER_STATUS = 'Y' AND
              TBL_CENTER_MEMBER.CENTER_MEMBER_NO = #{centerMemberNo}
    </select>
<!--신고 내역 조회-->
    <select id="selectReportList" resultType="AdminReportDTO">
        SELECT REPORT_NO, 'POST' AS REPORT_TYPE,
            CASE
                WHEN REPORT_CATE = '입양' THEN 'ADOPT'
                WHEN REPORT_CATE = '임시보호' THEN 'PROTECT'
                WHEN REPORT_CATE = '후기' THEN 'REVIEW'
                WHEN REPORT_CATE = '봉사' THEN 'VOLUN'
                WHEN REPORT_CATE = '기부' THEN 'DONA'
                WHEN REPORT_CATE = '카풀' THEN 'CAR'
                WHEN REPORT_CATE = '커뮤' THEN 'COMMU'
            END AS REPORT_CATE, REPORT_CONTENT, TO_CHAR(REPORT_REGIDATE, 'YYYY-MM-DD') AS REPORT_REGIDATE,
               CASE
                   WHEN MOD(REPORT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = REPORT_WRITER)
                   WHEN MOD(REPORT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = REPORT_WRITER)
                   END AS REPORT_WRITER,
               REPORT_CONTENT_NO
        FROM TBL_REPORT
        WHERE REPORT_CATE IN ('입양', '임시보호', '후기', '봉사', '기부', '카풀', '커뮤')

        UNION ALL

        SELECT COMMENT_REPORT_NO, 'COMMENT' AS REPORT_TYPE,
               CASE
                   WHEN COMMENT_REPORT_CATE = '입양' THEN 'ADOPT'
                   WHEN COMMENT_REPORT_CATE = '임시보호' THEN 'PROTECT'
                   WHEN COMMENT_REPORT_CATE = '후기' THEN 'REVIEW'
                   WHEN COMMENT_REPORT_CATE = '봉사' THEN 'VOLUN'
                   WHEN COMMENT_REPORT_CATE = '기부' THEN 'DONA'
                   WHEN COMMENT_REPORT_CATE = '카풀' THEN 'CAR'
                   WHEN COMMENT_REPORT_CATE = '커뮤' THEN 'COMMU'
                   END AS COMMENT_REPORT_CATE, COMMENT_REPORT, TO_CHAR(COMMENT_REPORT_REGIDATE, 'YYYY-MM-DD') AS REPORT_REGIDATE,
               CASE
                   WHEN MOD(COMMENT_REPORT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = COMMENT_REPORT_WRITER)
                   WHEN MOD(COMMENT_REPORT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMENT_REPORT_WRITER)
                   END AS REPORT_WRITER,
               CONTENT_NO
        FROM TBL_COMMENT_REPORT
        WHERE COMMENT_REPORT_CATE IN ('입양', '임시보호', '후기', '봉사', '기부', '카풀', '커뮤')

        ORDER BY REPORT_REGIDATE DESC
    </select>
<!--    신고 내역 검색 조회-->
    <select id="searchReportByKeyword" parameterType="String" resultType="AdminReportDTO">
        SELECT REPORT_NO, 'POST' AS REPORT_TYPE,
               CASE
                   WHEN REPORT_CATE = '입양' THEN 'ADOPT'
                   WHEN REPORT_CATE = '임시보호' THEN 'PROTECT'
                   WHEN REPORT_CATE = '후기' THEN 'REVIEW'
                   WHEN REPORT_CATE = '봉사' THEN 'VOLUN'
                   WHEN REPORT_CATE = '기부' THEN 'DONA'
                   WHEN REPORT_CATE = '카풀' THEN 'CAR'
                   WHEN REPORT_CATE = '커뮤' THEN 'COMMU'
                   END AS REPORT_CATE, REPORT_CONTENT, TO_CHAR(REPORT_REGIDATE, 'YYYY-MM-DD') AS REPORT_REGIDATE,
               CASE
                   WHEN MOD(REPORT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = REPORT_WRITER)
                   WHEN MOD(REPORT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = REPORT_WRITER)
                   END AS REPORT_WRITER,
               REPORT_CONTENT_NO
        FROM TBL_REPORT
        WHERE REPORT_CONTENT LIKE '%' || #{keyword} || '%'
           OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = REPORT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
           OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = REPORT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

        UNION ALL

        SELECT COMMENT_REPORT_NO, 'COMMENT' AS REPORT_TYPE,
               CASE
                   WHEN COMMENT_REPORT_CATE = '입양' THEN 'ADOPT'
                   WHEN COMMENT_REPORT_CATE = '임시보호' THEN 'PROTECT'
                   WHEN COMMENT_REPORT_CATE = '후기' THEN 'REVIEW'
                   WHEN COMMENT_REPORT_CATE = '봉사' THEN 'VOLUN'
                   WHEN COMMENT_REPORT_CATE = '기부' THEN 'DONA'
                   WHEN COMMENT_REPORT_CATE = '카풀' THEN 'CAR'
                   WHEN COMMENT_REPORT_CATE = '커뮤' THEN 'COMMU'
                   END AS COMMENT_REPORT_CATE, COMMENT_REPORT, TO_CHAR(COMMENT_REPORT_REGIDATE, 'YYYY-MM-DD') AS REPORT_REGIDATE,
               CASE
                   WHEN MOD(COMMENT_REPORT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = COMMENT_REPORT_WRITER)
                   WHEN MOD(COMMENT_REPORT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMENT_REPORT_WRITER)
                   END AS REPORT_WRITER,
               CONTENT_NO
        FROM TBL_COMMENT_REPORT
        WHERE COMMENT_REPORT LIKE '%' || #{keyword} || '%'
           OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = COMMENT_REPORT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
           OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMENT_REPORT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')


        ORDER BY REPORT_REGIDATE DESC
    </select>
<!--게시글 목록 조회-->
    <select id="selectPostList" resultType="AdminPostDTO">
        WITH AllPosts AS (
            SELECT
                'COMMU' AS post_type,
                COMMU_NUMBER AS post_no,
                COMMU_TITLE AS post_title,
                COMMU_CONTENT as post_content,
                CASE
                    WHEN MOD(COMMU_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = COMMU_WRITER)
                    WHEN MOD(COMMU_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMU_WRITER)
                    END AS post_writer,
                COMMU_UPDATEDATE AS post_update_date
            FROM TBL_COMMU
            UNION ALL
            SELECT
                'VOLUN' AS post_type,
                VOLUN_NO AS post_no,
                VOLUN_TITLE AS post_title,
                VOLUN_CONTENT as post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_VOLUN.CENTER_MEMBER_NO) AS post_writer,
                VOLUN_UPDATEDATE AS post_update_date
            FROM TBL_VOLUN
            UNION ALL
            SELECT
                'DONA' AS post_type,
                DONA_NO AS post_no,
                DONA_TITLE AS post_title,
                DONA_CONTENT as post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_DONA.CENTER_MEMBER_NO) AS post_writer,
                DONA_UPDATEDATE AS post_update_date
            FROM TBL_DONA
            UNION ALL
            SELECT
                'ADOPT' AS post_type,
                ADOPT_NO AS post_no,
                ADOPT_TITLE AS post_title,
                ADOPT_CONTENT as post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_ADOPT.CENTER_MEMBER_NO) AS post_writer,
                ADOPT_UPDATEDATE AS post_update_date
            FROM TBL_ADOPT
            UNION ALL
            SELECT
                'CAR' AS post_type,
                CAR_NO AS post_no,
                CAR_TITLE AS post_title,
                CAR_CONTENT as post_content,
                CASE
                    WHEN MOD(CAR_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = CAR_WRITER)
                    WHEN MOD(CAR_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = CAR_WRITER)
                    END AS post_writer,
                CAR_UPDATEDATE AS post_update_date
            FROM TBL_CAR
            UNION ALL
            SELECT
                'PROTECT' AS post_type,
                PROTECT_NO AS post_no,
                PROTECT_TITLE AS post_title,
                PROTECT_CONTENT as post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_PROTECT.CENTER_MEMBER_NO) AS post_writer,
                PROTECT_UPDATEDATE AS post_update_date
            FROM TBL_PROTECT
            UNION ALL
            SELECT
                'REVIEW' AS post_type,
                REVIEW_NO AS post_no,
                REVIEW_TITLE AS post_title,
                REVIEW_CONTENT as post_content,
                (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = TBL_REVIEW.MEMBER_NO) AS post_writer,
                REVIEW_UPDATEDATE AS post_update_date
            FROM TBL_REVIEW
        )

        SELECT
            post_type,
            post_no,
            post_title,
            post_content,
            post_writer,
            post_update_date
        FROM AllPosts
        ORDER BY post_update_date DESC

    </select>
<!--게시글 검색 목록 조회-->
    <select id="searchPostByKeyword" parameterType="String" resultType="AdminPostDTO">
        WITH AllPosts AS (
            SELECT
                'COMMU' AS post_type,
                COMMU_NUMBER AS post_no,
                COMMU_TITLE AS post_title,
                COMMU_CONTENT AS post_content,
                CASE
                    WHEN MOD(COMMU_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = COMMU_WRITER)
                    WHEN MOD(COMMU_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMU_WRITER)
                    END AS post_writer,
                COMMU_UPDATEDATE AS post_update_date
            FROM TBL_COMMU
            WHERE COMMU_TITLE LIKE '%' || #{keyword} || '%'
               OR COMMU_CONTENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = COMMU_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMU_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'VOLUN' AS post_type,
                VOLUN_NO AS post_no,
                VOLUN_TITLE AS post_title,
                VOLUN_CONTENT AS post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_VOLUN.CENTER_MEMBER_NO) AS post_writer,
                VOLUN_UPDATEDATE AS post_update_date
            FROM TBL_VOLUN
            WHERE VOLUN_TITLE LIKE '%' || #{keyword} || '%'
               OR VOLUN_CONTENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_VOLUN.CENTER_MEMBER_NO AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'DONA' AS post_type,
                DONA_NO AS post_no,
                DONA_TITLE AS post_title,
                DONA_CONTENT AS post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_DONA.CENTER_MEMBER_NO) AS post_writer,
                DONA_UPDATEDATE AS post_update_date
            FROM TBL_DONA
            WHERE DONA_TITLE LIKE '%' || #{keyword} || '%'
               OR DONA_CONTENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_DONA.CENTER_MEMBER_NO AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'ADOPT' AS post_type,
                ADOPT_NO AS post_no,
                ADOPT_TITLE AS post_title,
                ADOPT_CONTENT AS post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_ADOPT.CENTER_MEMBER_NO) AS post_writer,
                ADOPT_UPDATEDATE AS post_update_date
            FROM TBL_ADOPT
            WHERE ADOPT_TITLE LIKE '%' || #{keyword} || '%'
               OR ADOPT_CONTENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_ADOPT.CENTER_MEMBER_NO AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'CAR' AS post_type,
                CAR_NO AS post_no,
                CAR_TITLE AS post_title,
                CAR_CONTENT AS post_content,
                CASE
                    WHEN MOD(CAR_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = CAR_WRITER)
                    WHEN MOD(CAR_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = CAR_WRITER)
                    END AS post_writer,
                CAR_UPDATEDATE AS post_update_date
            FROM TBL_CAR
            WHERE CAR_TITLE LIKE '%' || #{keyword} || '%'
               OR CAR_CONTENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = CAR_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = CAR_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'PROTECT' AS post_type,
                PROTECT_NO AS post_no,
                PROTECT_TITLE AS post_title,
                PROTECT_CONTENT AS post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_PROTECT.CENTER_MEMBER_NO) AS post_writer,
                PROTECT_UPDATEDATE AS post_update_date
            FROM TBL_PROTECT
            WHERE PROTECT_TITLE LIKE '%' || #{keyword} || '%'
               OR PROTECT_CONTENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_PROTECT.CENTER_MEMBER_NO AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'REVIEW' AS post_type,
                REVIEW_NO AS post_no,
                REVIEW_TITLE AS post_title,
                REVIEW_CONTENT AS post_content,
                (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = TBL_REVIEW.MEMBER_NO) AS post_writer,
                REVIEW_UPDATEDATE AS post_update_date
            FROM TBL_REVIEW
            WHERE REVIEW_TITLE LIKE '%' || #{keyword} || '%'
               OR REVIEW_CONTENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = TBL_REVIEW.MEMBER_NO AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
        )

        SELECT
            post_type,
            post_no,
            post_title,
            post_content,
            post_writer,
            post_update_date
        FROM AllPosts
        ORDER BY post_update_date DESC
    </select>

    <delete id="deletePost" parameterType="AdminPostDTO">
        <choose>
            <when test="item.postType == 'COMMU'">
                DELETE FROM TBL_COMMU
                WHERE COMMU_NUMBER = #{item.postNo}
            </when>
            <when test="item.postType == 'VOLUN'">
                DELETE FROM TBL_VOLUN
                WHERE VOLUN_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'DONA'">
                DELETE FROM TBL_DONA
                WHERE DONA_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'ADOPT'">
                DELETE FROM TBL_ADOPT
                WHERE ADOPT_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'CAR'">
                DELETE FROM TBL_CAR
                WHERE CAR_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'PROTECT'">
                DELETE FROM TBL_PROTECT
                WHERE PROTECT_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'REVIEW'">
                DELETE FROM TBL_REVIEW
                WHERE REVIEW_NO = #{item.postNo}
            </when>
        </choose>
    </delete>



<!--게시글 상세 조회-->
    <select id="selectPostDetail" parameterType="map" resultType="AdminPostDTO">
        <choose>
            <when test="postType == 'COMMU'">
                SELECT
                'COMMU' AS post_type,
                COMMU_NUMBER AS post_no,
                COMMU_TITLE AS post_title,
                COMMU_CONTENT AS post_content,
                CASE
                WHEN MOD(COMMU_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = COMMU_WRITER)
                WHEN MOD(COMMU_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMU_WRITER)
                END AS post_writer,
                COMMU_UPDATEDATE AS post_update_date
                FROM TBL_COMMU
                WHERE COMMU_NUMBER = #{postNo}
            </when>
            <when test="postType == 'VOLUN'">
                SELECT
                'VOLUN' AS post_type,
                VOLUN_NO AS post_no,
                VOLUN_TITLE AS post_title,
                VOLUN_CONTENT AS post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_VOLUN.CENTER_MEMBER_NO) AS post_writer,
                VOLUN_UPDATEDATE AS post_update_date
                FROM TBL_VOLUN
                WHERE VOLUN_NO = #{postNo}
            </when>
            <when test="postType == 'DONA'">
                SELECT
                'DONA' AS post_type,
                DONA_NO AS post_no,
                DONA_TITLE AS post_title,
                DONA_CONTENT AS post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_DONA.CENTER_MEMBER_NO) AS post_writer,
                DONA_UPDATEDATE AS post_update_date
                FROM TBL_DONA
                WHERE DONA_NO = #{postNo}
            </when>
            <when test="postType == 'ADOPT'">
                SELECT
                'ADOPT' AS post_type,
                ADOPT_NO AS post_no,
                ADOPT_TITLE AS post_title,
                ADOPT_CONTENT AS post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_ADOPT.CENTER_MEMBER_NO) AS post_writer,
                ADOPT_UPDATEDATE AS post_update_date
                FROM TBL_ADOPT
                WHERE ADOPT_NO = #{postNo}
            </when>
            <when test="postType == 'CAR'">
                SELECT
                'CAR' AS post_type,
                CAR_NO AS post_no,
                CAR_TITLE AS post_title,
                CAR_CONTENT AS post_content,
                CASE
                WHEN MOD(CAR_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = CAR_WRITER)
                WHEN MOD(CAR_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = CAR_WRITER)
                END AS post_writer,
                CAR_UPDATEDATE AS post_update_date
                FROM TBL_CAR
                WHERE CAR_NO = #{postNo}
            </when>
            <when test="postType == 'PROTECT'">
                SELECT
                'PROTECT' AS post_type,
                PROTECT_NO AS post_no,
                PROTECT_TITLE AS post_title,
                PROTECT_CONTENT AS post_content,
                (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = TBL_PROTECT.CENTER_MEMBER_NO) AS post_writer,
                PROTECT_UPDATEDATE AS post_update_date
                FROM TBL_PROTECT
                WHERE PROTECT_NO = #{postNo}
            </when>
            <when test="postType == 'REVIEW'">
                SELECT
                'REVIEW' AS post_type,
                REVIEW_NO AS post_no,
                REVIEW_TITLE AS post_title,
                REVIEW_CONTENT AS post_content,
                (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = TBL_REVIEW.MEMBER_NO) AS post_writer,
                REVIEW_UPDATEDATE AS post_update_date
                FROM TBL_REVIEW
                WHERE REVIEW_NO = #{postNo}
            </when>
            <otherwise>
                SELECT NULL AS post_no
            </otherwise>
        </choose>
    </select>

    <delete id="deletePostDetail" parameterType="AdminPostDTO">
        <choose>
            <when test="item.postType == 'COMMU'">
                DELETE FROM TBL_COMMU
                WHERE COMMU_NUMBER = #{item.postNo}
            </when>
            <when test="item.postType == 'VOLUN'">
                DELETE FROM TBL_VOLUN
                WHERE VOLUN_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'DONA'">
                DELETE FROM TBL_DONA
                WHERE DONA_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'ADOPT'">
                DELETE FROM TBL_ADOPT
                WHERE ADOPT_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'CAR'">
                DELETE FROM TBL_CAR
                WHERE CAR_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'PROTECT'">
                DELETE FROM TBL_PROTECT
                WHERE PROTECT_NO = #{item.postNo}
            </when>
            <when test="item.postType == 'REVIEW'">
                DELETE FROM TBL_REVIEW
                WHERE REVIEW_NO = #{item.postNo}
            </when>
        </choose>
    </delete>

    <delete id="deleteCommentDetail" parameterType="AdminCommentDTO">
        <choose>
            <when test="item.commentType == 'COMMU'">
                DELETE FROM TBL_COMMU_COMMENT
                WHERE COMMU_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'VOLUN'">
                DELETE FROM TBL_VOLUN_COMMENT
                WHERE VOLUN_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'DONA'">
                DELETE FROM TBL_DONA_COMMENT
                WHERE DONA_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'ADOPT'">
                DELETE FROM TBL_ADOPT_COMMENT
                WHERE ADOPT_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'CAR'">
                DELETE FROM TBL_CAR_COMMENT
                WHERE CAR_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'PROTECT'">
                DELETE FROM TBL_PROTECT_COMMENT
                WHERE PROTECT_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'REVIEW'">
                DELETE FROM TBL_REVIEW_COMMENT
                WHERE REVIEW_COMMENT_NO = #{item.commentNo}
            </when>
        </choose>
    </delete>
    <!--댓글 목록 조회-->
    <select id="selectCommentList" resultType="AdminCommentDTO">
        WITH AllComments AS (
            SELECT
                'COMMU' AS comment_type,
                COMMU_COMMENT_NO AS comment_no,
                CC.COMMU_NUMBER AS post_no,
                C.COMMU_TITLE AS post_title,
                COMMU_COMMENT as comment_content,
                CASE
                    WHEN MOD(COMMU_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = COMMU_COMMENT_WRITER)
                    WHEN MOD(COMMU_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMU_COMMENT_WRITER)
                    END AS comment_writer,
                COMMU_COMMENT_REGIDATE AS comment_update_date
            FROM TBL_COMMU_COMMENT CC JOIN TBL_COMMU C ON CC.COMMU_NUMBER = C.COMMU_NUMBER
            UNION ALL
            SELECT
                'VOLUN' AS comment_type,
                VOLUN_COMMENT_NO AS comment_no,
                VC.VOLUN_NO AS post_no,
                V.VOLUN_TITLE AS post_title,
                VOLUN_COMMENT as comment_content,
                CASE
                    WHEN MOD(VOLUN_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = VOLUN_COMMENT_WRITER)
                    WHEN MOD(VOLUN_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = VOLUN_COMMENT_WRITER)
                    END AS comment_writer,
                VOLUN_COMMENT_REGIDATE AS comment_update_date
            FROM TBL_VOLUN_COMMENT VC JOIN TBL_VOLUN V ON VC.VOLUN_NO = V.VOLUN_NO
            UNION ALL
            SELECT
                'DONA' AS comment_type,
                DONA_COMMENT_NO AS comment_no,
                DC.DONA_NO AS post_no,
                D.DONA_TITLE AS post_title,
                DONA_COMMENT_CONTENT as comment_content,
                CASE
                    WHEN MOD(DONA_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = DONA_COMMENT_WRITER)
                    WHEN MOD(DONA_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = DONA_COMMENT_WRITER)
                    END AS comment_writer,
                DONA_COMMENT_UPDATEDATE AS comment_update_date
            FROM TBL_DONA_COMMENT DC JOIN TBL_DONA D on DC.DONA_NO = D.DONA_NO
            UNION ALL
            SELECT
                'ADOPT' AS comment_type,
                ADOPT_COMMENT_NO AS comment_no,
                AC.ADOPT_NO AS post_no,
                A.ADOPT_TITLE AS post_title,
                ADOPT_COMMENT as comment_content,
                CASE
                    WHEN MOD(ADOPT_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = ADOPT_COMMENT_WRITER)
                    WHEN MOD(ADOPT_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = ADOPT_COMMENT_WRITER)
                    END AS comment_writer,
                ADOPT_COMMENT_UPDATEDATE AS comment_update_date
            FROM TBL_ADOPT_COMMENT AC JOIN TBL_ADOPT A ON AC.ADOPT_NO = A.ADOPT_NO
            UNION ALL
            SELECT
                'CAR' AS comment_type,
                CAR_COMMENT_NO AS comment_no,
                CC.CAR_NO AS post_no,
                C.CAR_TITLE AS post_title,
                CAR_COMMENT as comment_content,
                CASE
                    WHEN MOD(CAR_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = CAR_COMMENT_WRITER)
                    WHEN MOD(CAR_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = CAR_COMMENT_WRITER)
                    END AS comment_writer,
                CAR_COMMENT_REGIDATE AS comment_update_date
            FROM TBL_CAR_COMMENT CC JOIN TBL_CAR C ON CC.CAR_NO = C.CAR_NO
            UNION ALL
            SELECT
                'PROTECT' AS comment_type,
                PROTECT_COMMENT_NO AS comment_no,
                PC.PROTECT_NO AS post_no,
                P.PROTECT_TITLE AS post_title,
                PROTECT_COMMENT as comment_content,
                CASE
                    WHEN MOD(PROTECT_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = PROTECT_COMMENT_WRITER)
                    WHEN MOD(PROTECT_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = PROTECT_COMMENT_WRITER)
                    END AS comment_writer,
                PROTECT_COMMENT_UPDATEDATE AS comment_update_date
            FROM TBL_PROTECT_COMMENT PC JOIN TBL_PROTECT P on PC.PROTECT_NO = P.PROTECT_NO
            UNION ALL
            SELECT
                'REVIEW' AS comment_type,
                REVIEW_COMMENT_NO AS comment_no,
                RC.REVIEW_NO AS post_no,
                R.REVIEW_TITLE AS post_title,
                REVIEW_COMMENT as comment_content,
                CASE
                    WHEN MOD(REVIEW_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = REVIEW_COMMENT_WRITER)
                    WHEN MOD(REVIEW_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = REVIEW_COMMENT_WRITER)
                    END AS comment_writer,
                REVIEW_COMMENT_UPDATEDATE AS comment_update_date
            FROM TBL_REVIEW_COMMENT RC JOIN TBL_REVIEW R ON RC.REVIEW_NO = R.REVIEW_NO
        )

        SELECT
            comment_type,
            comment_no,
            post_no,
            post_title,
            comment_content,
            comment_writer,
            comment_update_date
        FROM AllComments
        ORDER BY comment_update_date DESC
    </select>

    <delete id="deleteComment" parameterType="AdminCommentDTO">
        <choose>
            <when test="item.commentType == 'COMMU'">
                DELETE FROM TBL_COMMU_COMMENT
                WHERE COMMU_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'VOLUN'">
                DELETE FROM TBL_VOLUN_COMMENT
                WHERE VOLUN_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'DONA'">
                DELETE FROM TBL_DONA_COMMENT
                WHERE DONA_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'ADOPT'">
                DELETE FROM TBL_ADOPT_COMMENT
                WHERE ADOPT_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'CAR'">
                DELETE FROM TBL_CAR_COMMENT
                WHERE CAR_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'PROTECT'">
                DELETE FROM TBL_PROTECT_COMMENT
                WHERE PROTECT_COMMENT_NO = #{item.commentNo}
            </when>
            <when test="item.commentType == 'REVIEW'">
                DELETE FROM TBL_REVIEW_COMMENT
                WHERE REVIEW_COMMENT_NO = #{item.commentNo}
            </when>
        </choose>
    </delete>

<!--댓글 검색 조회 목록-->
    <select id="searchCommentByKeyword" parameterType="String" resultType="AdminCommentDTO">
        WITH AllComments AS (
            SELECT
                'COMMU' AS comment_type,
                COMMU_COMMENT_NO AS comment_no,
                CC.COMMU_NUMBER AS post_no,
                C.COMMU_TITLE AS post_title,
                COMMU_COMMENT as comment_content,
                CASE
                    WHEN MOD(COMMU_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = COMMU_COMMENT_WRITER)
                    WHEN MOD(COMMU_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMU_COMMENT_WRITER)
                    END AS comment_writer,
                COMMU_COMMENT_REGIDATE AS comment_update_date
            FROM TBL_COMMU_COMMENT CC
                     JOIN TBL_COMMU C ON CC.COMMU_NUMBER = C.COMMU_NUMBER
            WHERE C.COMMU_TITLE LIKE '%' || #{keyword} || '%'
               OR COMMU_COMMENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = COMMU_COMMENT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMU_COMMENT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'VOLUN' AS comment_type,
                VOLUN_COMMENT_NO AS comment_no,
                VC.VOLUN_NO AS post_no,
                V.VOLUN_TITLE AS post_title,
                VOLUN_COMMENT as comment_content,
                CASE
                    WHEN MOD(VOLUN_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = VOLUN_COMMENT_WRITER)
                    WHEN MOD(VOLUN_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = VOLUN_COMMENT_WRITER)
                    END AS comment_writer,
                VOLUN_COMMENT_REGIDATE AS comment_update_date
            FROM TBL_VOLUN_COMMENT VC
                     JOIN TBL_VOLUN V ON VC.VOLUN_NO = V.VOLUN_NO
            WHERE V.VOLUN_TITLE LIKE '%' || #{keyword} || '%'
               OR VOLUN_COMMENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = VOLUN_COMMENT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = VOLUN_COMMENT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'DONA' AS comment_type,
                DONA_COMMENT_NO AS comment_no,
                DC.DONA_NO AS post_no,
                D.DONA_TITLE AS post_title,
                DONA_COMMENT_CONTENT as comment_content,
                CASE
                    WHEN MOD(DONA_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = DONA_COMMENT_WRITER)
                    WHEN MOD(DONA_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = DONA_COMMENT_WRITER)
                    END AS comment_writer,
                DONA_COMMENT_UPDATEDATE AS comment_update_date
            FROM TBL_DONA_COMMENT DC
                     JOIN TBL_DONA D ON DC.DONA_NO = D.DONA_NO
            WHERE D.DONA_TITLE LIKE '%' || #{keyword} || '%'
               OR DONA_COMMENT_CONTENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = DONA_COMMENT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = DONA_COMMENT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'ADOPT' AS comment_type,
                ADOPT_COMMENT_NO AS comment_no,
                AC.ADOPT_NO AS post_no,
                A.ADOPT_TITLE AS post_title,
                ADOPT_COMMENT as comment_content,
                CASE
                    WHEN MOD(ADOPT_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = ADOPT_COMMENT_WRITER)
                    WHEN MOD(ADOPT_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = ADOPT_COMMENT_WRITER)
                    END AS comment_writer,
                ADOPT_COMMENT_UPDATEDATE AS comment_update_date
            FROM TBL_ADOPT_COMMENT AC
                     JOIN TBL_ADOPT A ON AC.ADOPT_NO = A.ADOPT_NO
            WHERE A.ADOPT_TITLE LIKE '%' || #{keyword} || '%'
               OR ADOPT_COMMENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = ADOPT_COMMENT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = ADOPT_COMMENT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'CAR' AS comment_type,
                CAR_COMMENT_NO AS comment_no,
                CC.CAR_NO AS post_no,
                C.CAR_TITLE AS post_title,
                CAR_COMMENT as comment_content,
                CASE
                    WHEN MOD(CAR_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = CAR_COMMENT_WRITER)
                    WHEN MOD(CAR_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = CAR_COMMENT_WRITER)
                    END AS comment_writer,
                CAR_COMMENT_REGIDATE AS comment_update_date
            FROM TBL_CAR_COMMENT CC
                     JOIN TBL_CAR C ON CC.CAR_NO = C.CAR_NO
            WHERE C.CAR_TITLE LIKE '%' || #{keyword} || '%'
               OR CAR_COMMENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = CAR_COMMENT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = CAR_COMMENT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'PROTECT' AS comment_type,
                PROTECT_COMMENT_NO AS comment_no,
                PC.PROTECT_NO AS post_no,
                P.PROTECT_TITLE AS post_title,
                PROTECT_COMMENT as comment_content,
                CASE
                    WHEN MOD(PROTECT_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = PROTECT_COMMENT_WRITER)
                    WHEN MOD(PROTECT_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = PROTECT_COMMENT_WRITER)
                    END AS comment_writer,
                PROTECT_COMMENT_UPDATEDATE AS comment_update_date
            FROM TBL_PROTECT_COMMENT PC
                     JOIN TBL_PROTECT P ON PC.PROTECT_NO = P.PROTECT_NO
            WHERE P.PROTECT_TITLE LIKE '%' || #{keyword} || '%'
               OR PROTECT_COMMENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = PROTECT_COMMENT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = PROTECT_COMMENT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')

            UNION ALL

            SELECT
                'REVIEW' AS comment_type,
                REVIEW_COMMENT_NO AS comment_no,
                RC.REVIEW_NO AS post_no,
                R.REVIEW_TITLE AS post_title,
                REVIEW_COMMENT as comment_content,
                CASE
                    WHEN MOD(REVIEW_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = REVIEW_COMMENT_WRITER)
                    WHEN MOD(REVIEW_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = REVIEW_COMMENT_WRITER)
                    END AS comment_writer,
                REVIEW_COMMENT_UPDATEDATE AS comment_update_date
            FROM TBL_REVIEW_COMMENT RC
                     JOIN TBL_REVIEW R ON RC.REVIEW_NO = R.REVIEW_NO
            WHERE R.REVIEW_TITLE LIKE '%' || #{keyword} || '%'
               OR REVIEW_COMMENT LIKE '%' || #{keyword} || '%'
               OR EXISTS (SELECT 1 FROM TBL_MEMBER WHERE MEMBER_NO = REVIEW_COMMENT_WRITER AND MEMBER_NICKNAME LIKE '%' || #{keyword} || '%')
               OR EXISTS (SELECT 1 FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = REVIEW_COMMENT_WRITER AND CENTER_MEMBER_NAME LIKE '%' || #{keyword} || '%')
        )

        SELECT
            comment_type,
            comment_no,
            post_no,
            post_title,
            comment_content,
            comment_writer,
            comment_update_date
        FROM AllComments
        ORDER BY comment_update_date DESC
    </select>


    <select id="selectCommentListByPostNo" parameterType="map" resultType="AdminCommentDTO">
        <choose>
            <when test="postType == 'COMMU'">
                SELECT
                COMMU_COMMENT_NO AS commentNo,
                COMMU_NUMBER AS postNo,
                COMMU_COMMENT AS commentContent,
                CASE
                WHEN MOD(COMMU_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = COMMU_COMMENT_WRITER)
                WHEN MOD(COMMU_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = COMMU_COMMENT_WRITER)
                END AS commentWriter,
                COMMU_COMMENT_REGIDATE AS commentUpdateDate
                FROM TBL_COMMU_COMMENT
                WHERE COMMU_NUMBER = #{postNo}
            </when>
            <when test="postType == 'VOLUN'">
                SELECT
                VOLUN_COMMENT_NO AS commentNo,
                VOLUN_NO AS postNo,
                VOLUN_COMMENT AS commentContent,
                CASE
                WHEN MOD(VOLUN_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = VOLUN_COMMENT_WRITER)
                WHEN MOD(VOLUN_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = VOLUN_COMMENT_WRITER)
                END AS commentWriter,
                VOLUN_COMMENT_REGIDATE AS commentUpdateDate
                FROM TBL_VOLUN_COMMENT
                WHERE VOLUN_NO = #{postNo}
            </when>
            <when test="postType == 'DONA'">
                SELECT
                DONA_COMMENT_NO AS commentNo,
                DONA_NO AS postNo,
                DONA_COMMENT AS commentContent,
                CASE
                WHEN MOD(DONA_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = DONA_COMMENT_WRITER)
                WHEN MOD(DONA_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = DONA_COMMENT_WRITER)
                END AS commentWriter,
                DONA_COMMENT_REGIDATE AS commentUpdateDate
                FROM TBL_DONA_COMMENT
                WHERE DONA_NO = #{postNo}
            </when>
            <when test="postType == 'ADOPT'">
                SELECT
                ADOPT_COMMENT_NO AS commentNo,
                ADOPT_NO AS postNo,
                ADOPT_COMMENT AS commentContent,
                CASE
                WHEN MOD(ADOPT_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = ADOPT_COMMENT_WRITER)
                WHEN MOD(ADOPT_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = ADOPT_COMMENT_WRITER)
                END AS commentWriter,
                ADOPT_COMMENT_REGIDATE AS commentUpdateDate
                FROM TBL_ADOPT_COMMENT
                WHERE ADOPT_NO = #{postNo}
            </when>
            <when test="postType == 'CAR'">
                SELECT
                CAR_COMMENT_NO AS commentNo,
                CAR_NO AS postNo,
                CAR_COMMENT AS commentContent,
                CASE
                WHEN MOD(CAR_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = CAR_COMMENT_WRITER)
                WHEN MOD(CAR_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = CAR_COMMENT_WRITER)
                END AS commentWriter,
                CAR_COMMENT_REGIDATE AS commentUpdateDate
                FROM TBL_CAR_COMMENT
                WHERE CAR_NO = #{postNo}
            </when>
            <when test="postType == 'PROTECT'">
                SELECT
                PROTECT_COMMENT_NO AS commentNo,
                PROTECT_NO AS postNo,
                PROTECT_COMMENT AS commentContent,
                CASE
                WHEN MOD(PROTECT_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = PROTECT_COMMENT_WRITER)
                WHEN MOD(PROTECT_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = PROTECT_COMMENT_WRITER)
                END AS commentWriter,
                PROTECT_COMMENT_REGIDATE AS commentUpdateDate
                FROM TBL_PROTECT_COMMENT
                WHERE PROTECT_NO = #{postNo}
            </when>
            <when test="postType == 'REVIEW'">
                SELECT
                REVIEW_COMMENT_NO AS commentNo,
                REVIEW_NO AS postNo,
                REVIEW_COMMENT AS commentContent,
                CASE
                WHEN MOD(REVIEW_COMMENT_WRITER, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = REVIEW_COMMENT_WRITER)
                WHEN MOD(REVIEW_COMMENT_WRITER, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = REVIEW_COMMENT_WRITER)
                END AS commentWriter,
                REVIEW_COMMENT_REGIDATE AS commentUpdateDate
                FROM TBL_REVIEW_COMMENT
                WHERE REVIEW_NO = #{postNo}
            </when>
        </choose>
    </select>

    <!--공지사항 목록 조회-->
    <select id="selectNoticeList" resultType="AdminNoticeDTO">
        SELECT NOTICE_NO, ADMIN_NO, NOTICE_CATE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_UPDATEDATE
        FROM TBL_NOTICE
        ORDER BY NOTICE_UPDATEDATE DESC
    </select>

<!--공지사항 검색 목록 조회-->
    <select id="searchNoticeByKeyword" parameterType="String" resultType="AdminNoticeDTO">
        SELECT NOTICE_NO, ADMIN_NO, NOTICE_CATE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_UPDATEDATE
        FROM TBL_NOTICE
        WHERE NOTICE_TITLE LIKE '%' || #{keyword} || '%'
        ORDER BY NOTICE_UPDATEDATE DESC
    </select>

<!--    공지사항 상세 조회-->
    <select id="selectNoticeDetail" resultType="AdminNoticeDTO">
        SELECT NOTICE_NO, ADMIN_NO, NOTICE_CATE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_UPDATEDATE
        FROM TBL_NOTICE
        WHERE NOTICE_NO = #{noticeNo}
    </select>
<!--입양 신청서 목록 조회-->
    <select id="selectAdoptRequestList" resultType="AdminAdoptRequestDTO">
        SELECT
            ADOPT_REQUEST_NO,
            ADOPT_REQUEST_NAME,
            ADOPT_REQUEST_PHONE,
            ADOPT_REQUEST_PHONE_SUB,
            ADOPT_REQUEST_EMAIL,
            ADOPT_REQUEST_GENDER,
            ADOPT_REQUEST_AGE,
            ADOPT_REQUEST_ZIPCODE,
            ADOPT_REQUEST_ADDRESS,
            ADOPT_REQUEST_ADDRESS_DETAIL,
            ADOPT_REQUEST_JOB,
            ADOPT_REQUEST_MARRY,
            ADOPT_REQUEST_INFO_AGREEMENT,
            ADOPT_REQUEST_Q1,
            ADOPT_REQUEST_Q2,
            ADOPT_REQUEST_Q3,
            ADOPT_REQUEST_Q4,
            ADOPT_REQUEST_Q5,
            ADOPT_REQUEST_Q6,
            ADOPT_REQUEST_Q7,
            ADOPT_REQUEST_Q8,
            ADOPT_REQUEST_Q9,
            ADOPT_REQUEST_Q10,
            ADOPT_REQUEST_Q11,
            ADOPT_REQUEST_Q12,
            ADOPT_REQUEST_Q13,
            ADOPT_REQUEST_Q14,
            ADOPT_REQUEST_Q15,
            ADOPT_REQUEST_ADOPT_AGREEMENT,
            ADOPT_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME
        FROM
            TBL_ADOPT_REQUEST
                JOIN TBL_MEMBER ON TBL_ADOPT_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_ADOPT_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
    </select>

    <select id="selectAdoptRequestDetail" parameterType="Long" resultType="AdminAdoptRequestDTO">
        SELECT
            ADOPT_REQUEST_NO,
            ADOPT_REQUEST_NAME,
            ADOPT_REQUEST_PHONE,
            ADOPT_REQUEST_PHONE_SUB,
            ADOPT_REQUEST_EMAIL,
            ADOPT_REQUEST_GENDER,
            ADOPT_REQUEST_AGE,
            ADOPT_REQUEST_ZIPCODE,
            ADOPT_REQUEST_ADDRESS,
            ADOPT_REQUEST_ADDRESS_DETAIL,
            ADOPT_REQUEST_JOB,
            ADOPT_REQUEST_MARRY,
            ADOPT_REQUEST_INFO_AGREEMENT,
            ADOPT_REQUEST_Q1,
            ADOPT_REQUEST_Q2,
            ADOPT_REQUEST_Q3,
            ADOPT_REQUEST_Q4,
            ADOPT_REQUEST_Q5,
            ADOPT_REQUEST_Q6,
            ADOPT_REQUEST_Q7,
            ADOPT_REQUEST_Q8,
            ADOPT_REQUEST_Q9,
            ADOPT_REQUEST_Q10,
            ADOPT_REQUEST_Q11,
            ADOPT_REQUEST_Q12,
            ADOPT_REQUEST_Q13,
            ADOPT_REQUEST_Q14,
            ADOPT_REQUEST_Q15,
            ADOPT_REQUEST_ADOPT_AGREEMENT,
            ADOPT_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME
        FROM
            TBL_ADOPT_REQUEST
                JOIN TBL_MEMBER ON TBL_ADOPT_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_ADOPT_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE TBL_ADOPT_REQUEST.ADOPT_REQUEST_NO = #{adoptRequestNo}
    </select>

    <select id="searchAdoptRequestByKeyword" parameterType="String" resultType="AdminAdoptRequestDTO">
        SELECT
            ADOPT_REQUEST_NO,
            ADOPT_REQUEST_NAME,
            ADOPT_REQUEST_PHONE,
            ADOPT_REQUEST_PHONE_SUB,
            ADOPT_REQUEST_EMAIL,
            ADOPT_REQUEST_GENDER,
            ADOPT_REQUEST_AGE,
            ADOPT_REQUEST_ZIPCODE,
            ADOPT_REQUEST_ADDRESS,
            ADOPT_REQUEST_ADDRESS_DETAIL,
            ADOPT_REQUEST_JOB,
            ADOPT_REQUEST_MARRY,
            ADOPT_REQUEST_INFO_AGREEMENT,
            ADOPT_REQUEST_Q1,
            ADOPT_REQUEST_Q2,
            ADOPT_REQUEST_Q3,
            ADOPT_REQUEST_Q4,
            ADOPT_REQUEST_Q5,
            ADOPT_REQUEST_Q6,
            ADOPT_REQUEST_Q7,
            ADOPT_REQUEST_Q8,
            ADOPT_REQUEST_Q9,
            ADOPT_REQUEST_Q10,
            ADOPT_REQUEST_Q11,
            ADOPT_REQUEST_Q12,
            ADOPT_REQUEST_Q13,
            ADOPT_REQUEST_Q14,
            ADOPT_REQUEST_Q15,
            ADOPT_REQUEST_ADOPT_AGREEMENT,
            ADOPT_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME
        FROM
            TBL_ADOPT_REQUEST
                JOIN TBL_MEMBER ON TBL_ADOPT_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_ADOPT_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE ADOPT_REQUEST_NAME LIKE '%' || #{keyword} || '%' OR MEMBER_NICKNAME LIKE '%' || #{keyword} || '%' OR ADOPT_REQUEST_EMAIL LIKE '%' || #{keyword} || '%'
    </select>
<!--임시보호 신청서 목록 조회-->
    <select id="selectProtectRequestList" resultType="AdminProtectRequestDTO">
        SELECT
            PROTECT_REQUEST_NO,
            PROTECT_REQUEST_NAME,
            PROTECT_REQUEST_PHONE,
            PROTECT_REQUEST_PHONE_SUB,
            PROTECT_REQUEST_EMAIL,
            PROTECT_REQUEST_GENDER,
            PROTECT_REQUEST_AGE,
            PROTECT_REQUEST_ZIPCODE,
            PROTECT_REQUEST_ADDRESS,
            PROTECT_REQUEST_ADDR_DETAIL,
            PROTECT_REQUEST_JOB,
            PROTECT_REQUEST_MARRY,
            PROTECT_REQUEST_INFO_AGREE,
            PROTECT_REQUEST_Q1,
            PROTECT_REQUEST_Q2,
            PROTECT_REQUEST_Q3,
            PROTECT_REQUEST_Q4,
            PROTECT_REQUEST_Q5,
            PROTECT_REQUEST_Q6,
            PROTECT_REQUEST_Q7,
            PROTECT_REQUEST_Q8,
            PROTECT_REQUEST_Q9,
            PROTECT_REQUEST_Q10,
            PROTECT_REQUEST_Q11,
            PROTECT_REQUEST_Q12,
            PROTECT_REQUEST_Q13,
            PROTECT_REQUEST_Q14,
            PROTECT_REQUEST_Q15,
            PROTECT_REQUEST_PROTECT_AGREE,
            PROTECT_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME
        FROM
            TBL_PROTECT_REQUEST
                JOIN TBL_MEMBER ON TBL_PROTECT_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_PROTECT_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
    </select>

    <select id="selectProtectRequestDetail" parameterType="Long" resultType="AdminProtectRequestDTO">
        SELECT
            PROTECT_REQUEST_NO,
            PROTECT_REQUEST_NAME,
            PROTECT_REQUEST_PHONE,
            PROTECT_REQUEST_PHONE_SUB,
            PROTECT_REQUEST_EMAIL,
            PROTECT_REQUEST_GENDER,
            PROTECT_REQUEST_AGE,
            PROTECT_REQUEST_ZIPCODE,
            PROTECT_REQUEST_ADDRESS,
            PROTECT_REQUEST_ADDR_DETAIL,
            PROTECT_REQUEST_JOB,
            PROTECT_REQUEST_MARRY,
            PROTECT_REQUEST_INFO_AGREE,
            PROTECT_REQUEST_Q1,
            PROTECT_REQUEST_Q2,
            PROTECT_REQUEST_Q3,
            PROTECT_REQUEST_Q4,
            PROTECT_REQUEST_Q5,
            PROTECT_REQUEST_Q6,
            PROTECT_REQUEST_Q7,
            PROTECT_REQUEST_Q8,
            PROTECT_REQUEST_Q9,
            PROTECT_REQUEST_Q10,
            PROTECT_REQUEST_Q11,
            PROTECT_REQUEST_Q12,
            PROTECT_REQUEST_Q13,
            PROTECT_REQUEST_Q14,
            PROTECT_REQUEST_Q15,
            PROTECT_REQUEST_PROTECT_AGREE,
            PROTECT_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME
        FROM
            TBL_PROTECT_REQUEST
                JOIN TBL_MEMBER ON TBL_PROTECT_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_PROTECT_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE TBL_PROTECT_REQUEST.PROTECT_REQUEST_NO = #{protectRequestNo}
    </select>

    <select id="searchProtectRequestByKeyword" parameterType="String" resultType="AdminProtectRequestDTO">
        SELECT
            PROTECT_REQUEST_NO,
            PROTECT_REQUEST_NAME,
            PROTECT_REQUEST_PHONE,
            PROTECT_REQUEST_PHONE_SUB,
            PROTECT_REQUEST_EMAIL,
            PROTECT_REQUEST_GENDER,
            PROTECT_REQUEST_AGE,
            PROTECT_REQUEST_ZIPCODE,
            PROTECT_REQUEST_ADDRESS,
            PROTECT_REQUEST_ADDR_DETAIL,
            PROTECT_REQUEST_JOB,
            PROTECT_REQUEST_MARRY,
            PROTECT_REQUEST_INFO_AGREE,
            PROTECT_REQUEST_Q1,
            PROTECT_REQUEST_Q2,
            PROTECT_REQUEST_Q3,
            PROTECT_REQUEST_Q4,
            PROTECT_REQUEST_Q5,
            PROTECT_REQUEST_Q6,
            PROTECT_REQUEST_Q7,
            PROTECT_REQUEST_Q8,
            PROTECT_REQUEST_Q9,
            PROTECT_REQUEST_Q10,
            PROTECT_REQUEST_Q11,
            PROTECT_REQUEST_Q12,
            PROTECT_REQUEST_Q13,
            PROTECT_REQUEST_Q14,
            PROTECT_REQUEST_Q15,
            PROTECT_REQUEST_PROTECT_AGREE,
            PROTECT_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME
        FROM
            TBL_PROTECT_REQUEST
                JOIN TBL_MEMBER ON TBL_PROTECT_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_PROTECT_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE PROTECT_REQUEST_NAME LIKE '%' || #{keyword} || '%' OR MEMBER_NICKNAME LIKE '%' || #{keyword} || '%' OR PROTECT_REQUEST_EMAIL LIKE '%' || #{keyword} || '%'
    </select>
<!--    봉사 목록 조회-->
    <select id="selectVolunRequestList" resultType="AdminVolunRequestDTO">
        SELECT
            VOLUN_REQUEST_NO,
            VOLUN_REQUEST_NAME,
            VOLUN_REQUEST_PHONE,
            VOLUN_REQUEST_PHONE_SUB,
            VOLUN_REQUEST_EMAIL,
            VOLUN_REQUEST_GENDER,
            VOLUN_REQUEST_AGE,
            VOLUN_REQUEST_ZIPCODE,
            VOLUN_REQUEST_ADDRESS,
            VOLUN_REQUEST_ADDRESS_DETAIL,
            VOLUN_REQUEST_JOB,
            VOLUN_REQUEST_MARRY,
            VOLUN_REQUEST_AGREEMENT,
            VOLUN_REQUEST_Q1,
            VOLUN_REQUEST_Q2,
            VOLUN_REQUEST_Q3,
            VOLUN_REQUEST_Q4,
            VOLUN_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME,
            VOLUN_REQUEST_STATUS,
            TO_CHAR(VOLUN_REQUEST_REGIDATE, 'YYYY-MM-DD') as VOLUN_REQUEST_REGIDATE
        FROM
            TBL_VOLUN_REQUEST
                JOIN TBL_MEMBER ON TBL_VOLUN_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_VOLUN_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
    </select>

    <select id="selectVolunRequestDetail" parameterType="Long" resultType="AdminVolunRequestDTO">
        SELECT
            VOLUN_REQUEST_NO,
            VOLUN_REQUEST_NAME,
            VOLUN_REQUEST_PHONE,
            VOLUN_REQUEST_PHONE_SUB,
            VOLUN_REQUEST_EMAIL,
            VOLUN_REQUEST_GENDER,
            VOLUN_REQUEST_AGE,
            VOLUN_REQUEST_ZIPCODE,
            VOLUN_REQUEST_ADDRESS,
            VOLUN_REQUEST_ADDRESS_DETAIL,
            VOLUN_REQUEST_JOB,
            VOLUN_REQUEST_MARRY,
            VOLUN_REQUEST_AGREEMENT,
            VOLUN_REQUEST_Q1,
            VOLUN_REQUEST_Q2,
            VOLUN_REQUEST_Q3,
            VOLUN_REQUEST_Q4,
            VOLUN_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME,
            VOLUN_REQUEST_STATUS,
            TO_CHAR(VOLUN_REQUEST_REGIDATE, 'YYYY-MM-DD') as VOLUN_REQUEST_REGIDATE
        FROM
            TBL_VOLUN_REQUEST
                JOIN TBL_MEMBER ON TBL_VOLUN_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_VOLUN_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE VOLUN_REQUEST_NO = #{volunNo}
    </select>

    <select id="searchVolunRequestByKeyword" parameterType="String" resultType="AdminVolunRequestDTO">
        SELECT
            VOLUN_REQUEST_NO,
            VOLUN_REQUEST_NAME,
            VOLUN_REQUEST_PHONE,
            VOLUN_REQUEST_PHONE_SUB,
            VOLUN_REQUEST_EMAIL,
            VOLUN_REQUEST_GENDER,
            VOLUN_REQUEST_AGE,
            VOLUN_REQUEST_ZIPCODE,
            VOLUN_REQUEST_ADDRESS,
            VOLUN_REQUEST_ADDRESS_DETAIL,
            VOLUN_REQUEST_JOB,
            VOLUN_REQUEST_MARRY,
            VOLUN_REQUEST_AGREEMENT,
            VOLUN_REQUEST_Q1,
            VOLUN_REQUEST_Q2,
            VOLUN_REQUEST_Q3,
            VOLUN_REQUEST_Q4,
            VOLUN_NO,
            MEMBER_NAME,
            MEMBER_NICKNAME,
            MEMBER_EMAIL,
            MEMBER_PHONE_NUMBER,
            CENTER_MEMBER_NAME,
            VOLUN_REQUEST_STATUS,
            TO_CHAR(VOLUN_REQUEST_REGIDATE, 'YYYY-MM-DD') as VOLUN_REQUEST_REGIDATE
        FROM
            TBL_VOLUN_REQUEST
                JOIN TBL_MEMBER ON TBL_VOLUN_REQUEST.MEMBER_NO = TBL_MEMBER.MEMBER_NO
                JOIN TBL_CENTER_MEMBER ON TBL_VOLUN_REQUEST.CENTER_MEMBER_NO = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE VOLUN_REQUEST_NAME LIKE '%' || #{keyword} || '%' OR MEMBER_NICKNAME LIKE '%' || #{keyword} || '%' OR VOLUN_REQUEST_EMAIL LIKE '%' || #{keyword} || '%'
    </select>

    <select id="selectNoteReceiveList" resultType="AdminNoteReceiveDTO">
        SELECT
            NOTEBOX_RECEIVE_NO,
            NOTEBOX_RECEIVE_TITLE,
            NOTEBOX_RECEIVE_CONTENT,
            NOTEBOX_RECEIVE_REGIDATE,
            NOTEBOX_RECEIVE_READ,
            NOTEBOX_RECEIVE_S,
            CASE
                WHEN MOD(NOTEBOX_RECEIVE_S, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = NOTEBOX_RECEIVE_S)
                WHEN MOD(NOTEBOX_RECEIVE_S, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = NOTEBOX_RECEIVE_S)
                END AS NOTEBOX_RECEIVE_SNAME
        FROM
            TBL_NOTEBOX_RECEIVE
                LEFT JOIN
            TBL_MEMBER ON TBL_NOTEBOX_RECEIVE.NOTEBOX_RECEIVE_S = TBL_MEMBER.MEMBER_NO
                LEFT JOIN
            TBL_CENTER_MEMBER ON TBL_NOTEBOX_RECEIVE.NOTEBOX_RECEIVE_S = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE NOTEBOX_RECEIVE_R = 3
    </select>
    <select id="selectNoteSendList" resultType="AdminNoteSendDTO">
        SELECT
            NOTEBOX_SEND_NO,
            NOTEBOX_SEND_TITLE,
            NOTEBOX_SEND_CONTENT,
            NOTEBOX_SEND_REGIDATE,
            NOTEBOX_SEND_R,
            CASE
                WHEN MOD(NOTEBOX_SEND_R, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = NOTEBOX_SEND_R)
                WHEN MOD(NOTEBOX_SEND_R, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = NOTEBOX_SEND_R)
                WHEN MOD(NOTEBOX_SEND_R, 10) = 3 THEN '관리자'
                END AS NOTEBOX_SEND_RNAME
        FROM
            TBL_NOTEBOX_SEND
                LEFT JOIN
            TBL_MEMBER ON TBL_NOTEBOX_SEND.NOTEBOX_SEND_R = TBL_MEMBER.MEMBER_NO
                LEFT JOIN
            TBL_CENTER_MEMBER ON TBL_NOTEBOX_SEND.NOTEBOX_SEND_R = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE NOTEBOX_SEND_S = 3
    </select>

    <select id="selectNoteReceiveDetail" parameterType="Long" resultType="AdminNoteReceiveDTO">
        SELECT
            NOTEBOX_RECEIVE_NO,
            NOTEBOX_RECEIVE_TITLE,
            NOTEBOX_RECEIVE_CONTENT,
            NOTEBOX_RECEIVE_REGIDATE,
            NOTEBOX_RECEIVE_READ,
            NOTEBOX_RECEIVE_S,
            CASE
                WHEN MOD(NOTEBOX_RECEIVE_S, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = NOTEBOX_RECEIVE_S)
                WHEN MOD(NOTEBOX_RECEIVE_S, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = NOTEBOX_RECEIVE_S)
                WHEN MOD(NOTEBOX_RECEIVE_S, 10) = 3 THEN '관리자'
                END AS NOTEBOX_RECEIVE_SNAME
        FROM
            TBL_NOTEBOX_RECEIVE
                LEFT JOIN
            TBL_MEMBER ON TBL_NOTEBOX_RECEIVE.NOTEBOX_RECEIVE_S = TBL_MEMBER.MEMBER_NO
                LEFT JOIN
            TBL_CENTER_MEMBER ON TBL_NOTEBOX_RECEIVE.NOTEBOX_RECEIVE_S = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE NOTEBOX_RECEIVE_R = 3 AND NOTEBOX_RECEIVE_NO = #{noteboxReceiveNo}
    </select>

    <select id="selectNoteSendDetail" parameterType="Long" resultType="AdminNoteSendDTO">
        SELECT
            NOTEBOX_SEND_NO,
            NOTEBOX_SEND_TITLE,
            NOTEBOX_SEND_CONTENT,
            NOTEBOX_SEND_REGIDATE,
            NOTEBOX_SEND_R,
            CASE
                WHEN MOD(NOTEBOX_SEND_R, 10) = 1 THEN (SELECT MEMBER_NICKNAME FROM TBL_MEMBER WHERE MEMBER_NO = NOTEBOX_SEND_R)
                WHEN MOD(NOTEBOX_SEND_R, 10) = 2 THEN (SELECT CENTER_MEMBER_NAME FROM TBL_CENTER_MEMBER WHERE CENTER_MEMBER_NO = NOTEBOX_SEND_R)
                WHEN MOD(NOTEBOX_SEND_R, 10) = 3 THEN '관리자'
                END AS NOTEBOX_SEND_RNAME
        FROM
            TBL_NOTEBOX_SEND
                LEFT JOIN
            TBL_MEMBER ON TBL_NOTEBOX_SEND.NOTEBOX_SEND_R = TBL_MEMBER.MEMBER_NO
                LEFT JOIN
            TBL_CENTER_MEMBER ON TBL_NOTEBOX_SEND.NOTEBOX_SEND_R = TBL_CENTER_MEMBER.CENTER_MEMBER_NO
        WHERE NOTEBOX_SEND_S = 3 AND NOTEBOX_SEND_NO = #{noteboxSendNo}
    </select>

    <insert id="insertNoteWriteReceive" parameterType="map">
        <selectKey keyProperty="receiverNumber" resultType="Long" order="BEFORE">
            SELECT MEMBER_NO
            FROM TBL_MEMBER
            WHERE MEMBER_NICKNAME = #{receiver}
            UNION
            SELECT CENTER_MEMBER_NO
            FROM TBL_CENTER_MEMBER
            WHERE CENTER_MEMBER_NAME = #{receiver}
        </selectKey>
        INSERT INTO TBL_NOTEBOX_RECEIVE(notebox_receive_no, notebox_receive_title, notebox_receive_content, notebox_receive_regidate, notebox_receive_read, notebox_receive_readdate, notebox_receive_s, notebox_receive_r)
        VALUES (SEQ_NOTE_RECEIVE.nextval, #{title}, #{content}, sysdate, 'N', null, 3, #{receiverNumber})
    </insert>

    <insert id="insertNoteWriteSend" parameterType="map">
        <selectKey keyProperty="receiverNumber" resultType="Long" order="BEFORE">
            SELECT MEMBER_NO
            FROM TBL_MEMBER
            WHERE MEMBER_NICKNAME = #{receiver}
            UNION
            SELECT CENTER_MEMBER_NO
            FROM TBL_CENTER_MEMBER
            WHERE CENTER_MEMBER_NAME = #{receiver}
        </selectKey>
        INSERT INTO TBL_NOTEBOX_SEND(notebox_send_no, notebox_send_title, notebox_send_content, notebox_send_regidate, notebox_send_s, notebox_send_r)
        VALUES (SEQ_NOTE_SEND.nextval, #{title}, #{content}, sysdate, 3, #{receiverNumber})
    </insert>

    <select id="searchNoteInByKeyword" parameterType="String" resultType="AdminNoteReceiveDTO">
        SELECT
            NR.NOTEBOX_RECEIVE_NO,
            NR.NOTEBOX_RECEIVE_TITLE,
            NR.NOTEBOX_RECEIVE_CONTENT,
            NR.NOTEBOX_RECEIVE_REGIDATE,
            NR.NOTEBOX_RECEIVE_READ,
            NR.NOTEBOX_RECEIVE_S,
            COALESCE(M.MEMBER_NICKNAME, C.CENTER_MEMBER_NAME) AS NOTEBOX_RECEIVE_SNAME
        FROM
            TBL_NOTEBOX_RECEIVE NR
                LEFT JOIN
            TBL_MEMBER M ON NR.NOTEBOX_RECEIVE_S = M.MEMBER_NO AND MOD(NR.NOTEBOX_RECEIVE_S, 10) = 1
                LEFT JOIN
            TBL_CENTER_MEMBER C ON NR.NOTEBOX_RECEIVE_S = C.CENTER_MEMBER_NO AND MOD(NR.NOTEBOX_RECEIVE_S, 10) = 2
        WHERE
            NR.NOTEBOX_RECEIVE_R = 3 AND
            (COALESCE(M.MEMBER_NICKNAME, C.CENTER_MEMBER_NAME) LIKE '%' || #{keyword} || '%' OR
             NR.NOTEBOX_RECEIVE_TITLE LIKE '%' || #{keyword} || '%' OR
             NR.NOTEBOX_RECEIVE_CONTENT LIKE '%' || #{keyword} || '%')
    </select>

    <select id="searchNoteOutByKeyword" parameterType="String" resultType="AdminNoteSendDTO">
        SELECT
            NS.NOTEBOX_SEND_NO,
            NS.NOTEBOX_SEND_TITLE,
            NS.NOTEBOX_SEND_CONTENT,
            NS.NOTEBOX_SEND_REGIDATE,
            NS.NOTEBOX_SEND_S,
            COALESCE(M.MEMBER_NICKNAME, C.CENTER_MEMBER_NAME) AS NOTEBOX_SEND_RNAME
        FROM
            TBL_NOTEBOX_SEND NS
                LEFT JOIN
            TBL_MEMBER M ON NS.NOTEBOX_SEND_R = M.MEMBER_NO AND MOD(NS.NOTEBOX_SEND_R, 10) = 1
                LEFT JOIN
            TBL_CENTER_MEMBER C ON NS.NOTEBOX_SEND_R = C.CENTER_MEMBER_NO AND MOD(NS.NOTEBOX_SEND_R, 10) = 2
        WHERE
            NS.NOTEBOX_SEND_S = 3 AND
            (COALESCE(M.MEMBER_NICKNAME, C.CENTER_MEMBER_NAME) LIKE '%' || #{keyword} || '%' OR
             NS.NOTEBOX_SEND_TITLE LIKE '%' || #{keyword} || '%' OR
             NS.NOTEBOX_SEND_CONTENT LIKE '%' || #{keyword} || '%')
    </select>
    
</mapper>
